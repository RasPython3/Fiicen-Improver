:where(main:nth-child(3) > div > div > div:first-child > div.relative,
main:not(:nth-child(3)) > div > div > div.relative,
div.flex.flex-col.gap-4 > div.relative.flex,
div.min-h-screen.border-x > div:first-child > div:first-child,
body > div.fixed.inset-0 > div.base-bg.absolute > div.base-bg-float.sticky + div:not(.p-4) > div:first-child) {
    > div:nth-last-child(2):not(.relative),
    > div:nth-last-child(2) > div:last-child button.absolute.inset-0 + div > div > div:nth-child(2) > div:first-child > div:not(.relative),
    > div:nth-last-child(2) > div:last-child button.absolute.inset-0 + div > div > div:nth-child(2) > div:first-child > div.relative > div,
    > div .quoted-circle > div,
    > div.relative:not(:last-child) > div,
    > div.relative:not(:last-child) + div:last-child:not(.relative),
    > div:first-child:last-child:not(.relative) {
        > div:first-child > div > p {
            font-size: 0.8em;
        }
        > div:nth-child(2) {
            padding-left: 2.25rem;
            padding-right: 1.625rem;
            > div:not(.mt-1.whitespace-pre-wrap.break-all):has(> a), > video {
                margin-left: -0.625rem;
                margin-right: -0.625rem;
                max-width: calc(100% + 0.625rem);
                width: calc(100% + 0.625rem);
            }
            > div:not(.mt-1.whitespace-pre-wrap.break-all):not(:has(> a)) {
                margin-left: -0.625rem;
                margin-right: 0;
                > div {
                    display: flex;
                    align-content: center;
                    justify-content: center;
                    max-height: 100%;
                    aspect-ratio: unset ! important;
                }
                > div.relative {
                    display: inline-block;
                    > div > div:first-child.absolute {
                        position: relative;
                        > img {
                            position: relative ! important;
                            height: unset ! important;
                            max-height: 32rem;
                            --imprv-saved: 1;
                        }
                    }
                }
            }
            > div:not(.mt-1.whitespace-pre-wrap.break-all):not(:has(> a)):has(> div.relative:first-child):not(:has(> div.relative:nth-child(2))) {
                aspect-ratio: unset;
            }
            > div.mt-1.whitespace-pre-wrap.break-all {
                overflow-wrap: anywhere;
            }
            > div.mt-1.whitespace-pre-wrap.break-all > :where(iframe, div) {
                margin-top: 0.5rem;
                margin-left: -0.625rem;
                margin-right: 0;
            }
            > div.mt-1.whitespace-pre-wrap.break-all > video {
                margin-left: -1rem;
                margin-top: 0.5rem;
            }
            @media (max-width: 768px) {
                > div:not(.mt-1.whitespace-pre-wrap.break-all):has(> a), > video {
                    margin-left: -1.5rem;
                    margin-right: -0.875rem;
                    max-width: calc(100% + 2.375rem);
                    width: calc(100% + 2.375rem);
                }
                > div:not(.mt-1.whitespace-pre-wrap.break-all):not(:has(> a)),
                > div.mt-1.whitespace-pre-wrap.break-all > :where(iframe, div) {
                    margin-left: -1.5rem;
                    margin-right: -0.875rem;
                    width: calc(100% + 2.375rem);
                }
            }
        }
    }
    > div:last-child:nth-child(2), > div:last-child:nth-child(3),
    &:has(> div.base-border:first-child):has(> div:nth-last-child(2):not(.base-border)) > div:last-child.base-border {
        justify-content: space-around;
    }
}


body > div > nav.z-10 {
    z-index: 11;
}

div:has(div > main:nth-child(3)) > div:first-child > header.pt-2 {
    margin-inline: calc(50% - 50vw);
    padding-inline: calc(50vw - 50%);
    box-sizing: content-box;

    > div:first-child, > div:last-child {
        position: relative;
        top: -.5rem;
    }
}

body > div > nav > button + div{
    overflow-y: hidden;
}

header.sticky.left-0 > div:first-child > div {
    margin-left: calc(50% - 50vw);
}


/* media page */
:where(main > div:first-child > div:first-child, header + main.flex > div) > div.grid:first-child > div.relative.aspect-square > div > div.absolute > img {
    --imprv-saved: 1;
}


/* message page */

@media (min-width: 768px) {
    .md\:grid-cols-\[1fr_1\.618fr\] {
        grid-template-columns: max(24rem, calc(100% / 2.618)) 1fr ! important;
    }
    .md\:grid-cols-\[1fr_1\.618fr\] .md\:max-w-sm {
        max-width: unset;
    }
}

main > div > header + div:has(> h1:first-child) + div:has(> ul:first-child) {
    max-height: calc(100vh - 4.5rem - 2px);
    overflow-y: scroll;
}

button.text-left:has(> img:first-child) > span.inline-flex:last-child {
    position: relative;
    color: transparent ! important;
}

button.text-left:has(> img:first-child) > span.inline-flex:last-child::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    --icon: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M 1 10 L 2 8 L 7 12 L 14 3 L 7 15 L 1 10 Z" style="fill:white"></path></svg>');
    -webkit-mask-image: var(--icon);
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-image: var(--icon);
    mask-size: contain;
    mask-repeat: no-repeat;
    background: transparent;
}

button.text-left:has(> img:first-child) > span.inline-flex.text-white:last-child::after {
    background: white;
}


div:has(> main:nth-child(3)) > div > div:not(:has(> div:nth-child(3))) > div:first-child > div.flex {
    align-items: center;
}

div:has(> main:nth-child(3)) > div > div {
    gap: 0.25rem;
}

div:has(> main:nth-child(3)) > div > div > div:first-child div:not(.fixed) > img {
    --imprv-saved: 1;
}

div:has(> main:nth-child(3)) > div > div > div:last-child:has(> p) {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #ffffff2f;
    padding: 0.75rem;
    border-radius: 0.75rem;
}

div:has(> main:nth-child(3)) {
    align-items: center;
}

main.p-4:has(div.text-center > h1.font-bold) {
    padding: 0;
}

main:not(.p-4):not(.w-screen), header:has(+ main:not(.p-4):not(.w-screen)) {
    width: 36rem;
    max-width: calc(100vw - 2rem);
}

div:has(> main:nth-child(3)) > div:first-child {
    width: 150%;
    max-width: calc(100vw - 2rem);
}

@media (min-width: 768px) {
    div:has(> main:nth-child(3)) > div:first-child {
        max-width: calc(100vw - 6rem);
    }
}

div:has(> div.min-h-screen.border-x) {
    max-width: 42rem;
}
div.min-h-screen.border-x {
    padding-top: 1rem;
}

@media (min-width: 38.5rem) {
    div:has(> main:nth-child(3)) > div:first-child > div {
        position: relative;
        display: flex;
        padding-right: calc(50% + 1rem);
        flex-direction: column;
        flex-wrap: wrap;
        justify-content: center;
    }

    div:has(> main:nth-child(3)) > div:first-child > div:not(:has(> div:last-child)) {
        padding-left: 20%;
        padding-right: 20%;
    }

    div:has(> main:nth-child(3)) > div:first-child > div > * {
        max-width: calc(100vw - 4.5rem);
    }

    div:has(> main:nth-child(3)) > div:first-child > div > div:last-child {
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: calc(50% - 1rem);
        height: calc(100% - 2rem);
    }
}

div:has(> main:nth-child(3)) > div:first-child > div > div:last-child > p {
    overflow-wrap: anywhere;
    white-space: break-spaces;
}

/* QR button */
svg[name="qrcode"] {
    fill: rgb(0 0 0/var(--tw-bg-opacity));
    stroke: rgb(0 0 0/var(--tw-bg-opacity));
}

svg[name="qrcode"]:where(.dark,.dark *) {
    fill: rgb(255 255 255/var(--tw-bg-opacity));
    stroke: rgb(255 255 255/var(--tw-bg-opacity));
}

/* quoted circle */

.quoted-circle, .quoted-circle > div {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.quoted-circle > button:first-child {
    position: relative;
    width: 100%;
    height: 100vh;
    margin-bottom: -100vh;
    inset: 0;
    cursor: pointer;
}

.quoted-circle > div {
    padding: 0.5rem;
}

.quoted-circle > div, .quoted-circle > div > div {
    width: 100%;
}

.quoted-circle > div > div:first-child > div:last-child {
    white-space: nowrap;
    > a {
        overflow: hidden;
        text-overflow: ellipsis;
    }
}


.quoted-circle > div > div:nth-child(2) {
    padding-left: 1.75rem ! important;
}

@media (max-width: 768px) {
    .quoted-circle > div > div:nth-child(2) {
        padding-left: 1rem ! important;
        padding-right: 0.25rem ! important;
    }
}

.quoted-circle > div > .media-group {
    display: grid;
    width: calc(100% + 1rem);
    max-height: 16rem;
    margin-top: 0.5rem;
    margin-bottom: -0.5rem;
    margin-left: -0.5rem;
    margin-right: -0.5rem;
    border-top-style: solid;
    border-top-width: 1px;
}

.quoted-circle > div > .media-group > div > img {
    --imprv-saved: 1;
}

.quoted-circle > div > .media-group:has(> div:first-child:nth-last-child(2)) {
    grid-template-rows: repeat(1, minmax(0, 1fr));
    grid-template-columns: repeat(2, minmax(0, 1fr));
    > div {
        grid-row: span 1;
        grid-column: span 1;
    }
}

.quoted-circle > div > .media-group:has(> div:nth-child(3)) {
    grid-template-rows: repeat(2, minmax(0, 1fr));
    grid-template-columns: repeat(2, minmax(0, 1fr));
    > div {
        grid-row: span 1;
        grid-column: span 1;
    }
    > div:first-child:nth-last-child(3) {
        grid-row: span 2;
    }
}

.quoted-circle > div > .media-group > div {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    overflow: hidden;
    box-sizing: content-box;
    border-color: inherit;
}

.quoted-circle > div > .media-group > div:not(:first-child):not(:nth-child(2):nth-last-child(3)) {
    border-left-style: solid;
    border-left-width: 1px;
}

.quoted-circle > div > .media-group > div:not(:first-child):not(:nth-child(2):last-child):not(:nth-child(2):nth-last-child(2)) {
    border-top-style: solid;
    border-top-width: 1px;
}

.quoted-circle > div > .media-group > div > :where(img, video) {
    width: 100%;
    height: 100%;
    object-fit: cover;
    cursor: pointer;
    z-index: 9;
}

/* setting */

._fiicen_improver_settings section {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: center;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 1em;
    padding-right: 1em;
    gap: 2rem;
    box-sizing: border-box;
}

._fiicen_improver_settings section + section {
    margin-top: 0.5rem;
}

._fiicen_improver_settings section > input[type="checkbox"], input.fiicen-improver-checkbox[type="checkbox"] {
    display: inline-flex;
    appearance: unset;
    width: 3.5em;
    min-width: 3.5em;
    height: 2em;
    border-radius: 2em;
    border:  solid 1px #444444;
    align-items: center;
    box-sizing: border-box;
}

._fiicen_improver_settings section > input[type="checkbox"]:disabled, input.fiicen-improver-checkbox[type="checkbox"]:disabled {
    background-color: #aaaaaa80;
}

._fiicen_improver_settings section > input[type="checkbox"]:checked, input.fiicen-improver-checkbox[type="checkbox"]:checked {
    background-color: #6666ff;
}

._fiicen_improver_settings section > input[type="checkbox"]:disabled:checked, input.fiicen-improver-checkbox[type="checkbox"]:disabled:checked {
    background-color: #6666ff80;
}

._fiicen_improver_settings section > input[type="checkbox"]::after, input.fiicen-improver-checkbox[type="checkbox"]::after {
    content: "";
    display: inline-block;
    position: relative;
    height: 80%;
    aspect-ratio: 1;
    margin: calc(8% - 0.5px);
    background-color: white;
    background-origin: content-box;
    border-style: solid;
    border-width: 1px;
    border-color: #444444;
    border-radius: 50%;
    padding: 5%;
    box-sizing: border-box;
    left: 0;
    background-size: contain;
    transition: left 0.15s cubic-bezier(0.67, -0.01, 0.1, 1.5);
}

._fiicen_improver_settings section > input[type="checkbox"]:checked::after, input.fiicen-improver-checkbox[type="checkbox"]:checked::after {
    left: 42%;
}

._fiicen_improver_settings section > input[type="checkbox"]:disabled::after, input.fiicen-improver-checkbox[type="checkbox"]:disabled::after {
    background-color: #ffffff80;
}

._fiicen_improver_settings section:has(> a) {
    padding: 0;
    > a {
        display: inline-block;
        padding: 1em;
        width: 100%;
        height: 100%;
    }
}

._fiicen_improver_settings section:last-child {
    flex-direction: row-reverse;
    padding-top: 0;
    padding-bottom: 0;
}

._fiicen_improver_settings section:last-child > span {
    font-size: 0.75em;
    opacity: 50%;
}

/* alert - moment */

p {
    animation-duration: 3s;
    animation-name: slidein;
}
  
@keyframes alert-motion {
    from {
        top: -4rem;
        opacity: 0;
    }
    5% {
        top: 4rem;
        opacity: 1;
    }
    95% {
        top: 4rem;
        opacity: 1;
    }
    to {
        top: -4rem;
        opacity: 0;
    }
}

.alert-moment {
    position: fixed;
    width: 24rem;
    padding: 1rem;
    border-radius: 1.5rem;
    left: 50vw;
    transform: translateX(-50%);
    text-align: center;
    white-space: pre-line;
    word-break: break-word;
    opacity: 0;
    z-index: 100;
    /* animation */
    animation-duration: 2.5s;
    animation-name: alert-motion;
}

/* error handling */
body > .errors {
    position: fixed;
    display: flex;
    width: calc(100% - 2rem);
    height: fit-content;
    bottom: 1rem;
    left: 1rem;
    flex-direction: column-reverse;
    align-items: flex-end;
    gap: 0.5rem;
    z-index: 10000;

    > span {
        width: 100%;
        max-width: 32rem;
        padding: 0.5rem;
        border-radius: 0.5rem;
        white-space: pre-line;
        word-break: break-all;
        overflow-wrap: anywhere;
        color: rgb(255 255 255/var(--tw-bg-opacity));
        background: rgb(0 0 0/var(--tw-bg-opacity));
    }

    > span:where(.dark,.dark *) {
        color: rgb(0 0 0/var(--tw-bg-opacity));
        background: rgb(255 255 255/var(--tw-bg-opacity));
    }
}
